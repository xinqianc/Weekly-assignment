RNA seq pipelines:


(1)Raw reads (RNA) --> Genome or ---> Transcriptomes or --> no Ref, raw reads to transcriptptomes, and map raw reads to transcriptomes
and then we get .sam/.bam file

.sam file:
------------------------------------------------
 ---             ----               ----
  ----               ----      ------ 
 
 
 we want to determine differential gene expression:


conda create -n RNASeq STAR rsem
(STAR: splice-aware mapper; rsem: counting , output the number of counts)
cd scratch/in_class_assignments
mkdir RNASeq
cd RNASeq
wget https://www.encodeproject.org/files/ENCFF001RFH/@@download/ENCFF001RFH.fastq.gz -O GM12878.rep1.R1.fastq.gz
wget https://www.encodeproject.org/files/ENCFF001RFG/@@download/ENCFF001RFG.fastq.gz -O GM12878.rep1.R2.fastq.gz 
(read 1 and read 2 only for one replicate; we could use command: f loop to run multiple reads, because one replicate is not enough, we need to consider seq depth,so more replicates)
wget http://ftp.ensembl.org/pub/release-86/gtf/homo_sapiens/Homo_sapiens.GRCh38.86.gtf.gz
gunzip Homo_sapiens.GRCh38.86.gtf.gz
wget http://ftp.ensembl.org/pub/release-86/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz
gunzip Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz
(gtf: annotation)
(we have Ref with fasta and gtf file)
QA/QC --- fastqc
trimming cutadapt
conda activate RNASeq(give access to use star)
mkdir star
STAR --runMode genomeGenerate --genomeDir star --genomeFastaFiles Homo_sapiens.GRCh38.dna.primary_assembly.fa --sjdbGTFfile Homo_sapiens.GRCh38.86.gtf
(index our ref before mapping, let our ref more researchable)
(sjdbgTFfile: add the annotation of the genome, we need to provide fasta, and gtf: to know where is the exon and intron)
STAR --genomeDir star --readFilesCommand zcat --readFilesIn GM12878.1.R1.fastq.gz GM12878.1.R2.fastq.gz --outSAMtype BAM SortedByCoordinate --outSAMunmapped Within --twopassMode Basic --outFilterMultimapNmax 1 --quantMode TranscriptomeSAM --outFileNamePrefix "GM12872.1"
(if we have fastq, we dont need to zcat. but now is .gz; sort the mapping reads in order;outSAMunmapped Within: if you have reads do not map to anything, we just throw it; twopassMode Basic:want the best one; )
(map the raw reads with Ref)
(mapping will give us .bam file)
(.bam ---> counts by rsem)
our goal: rsem
          counts
gene 1      1
G2         100
G3        10000
mkdir rsem
rsem-prepare-reference --gtf Homo_sapiens.GRCh38.86.gtf Homo_sapiens.GRCh38.dna.primary_assembly.fa rsem/GRCh38
(Ref's .gtf and .fa)
rsem-calculate-expression --bam --no-bam-output --paired-end --forward-prob 0 GM12872.1Aligned.toTranscriptome.out.bam rsem/GRCh38 out >& rsem.log

