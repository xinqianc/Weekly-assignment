cd /stratch_30_tmp/xinqianc
cd in_class_assignment
mkdir de_novo_assembly
cp trimming/T1_R1.cutadapt.fastq de_novo_assembly/
cp trimming/T1_R2.cutadapt.fastq de_novo_assembly/
conda activate de_novo
cd de_novo_assembly
spades.py -k 21,51,71,91,111,127 --careful --pe1-1 T1_R1.cutadapt.fastq --pe1-2 T1_R2.cutadapt.fastq -o T1_spades_output
(a range of K-mers; spades only accept odd K-mers, the maximum is 127; -0 output )
ls T1_spades_output
quast contigs.fasta -o Quast_contigs
(if we add reference sequences, quast help us find similarity)
(de_novo) [xinqianc@colossus T1_spades_output]$ cd Quast_contigs/
(de_novo) [xinqianc@colossus Quast_contigs]$ ls
basic_stats     quast.log    report.tex  transposed_report.tex
icarus.html     report.html  report.tsv  transposed_report.tsv
icarus_viewers  report.pdf   report.txt  transposed_report.txt
(de_novo) [xinqianc@colossus Quast_contigs]$ head report.txt
All statistics are based on contigs of size >= 500 bp, unless otherwise noted (e.g., "# contigs (>= 0 bp)" and "Total length (>= 0 bp)" include all contigs).

Assembly                    contigs
# contigs (>= 0 bp)         279
# contigs (>= 1000 bp)      99
# contigs (>= 5000 bp)      71
# contigs (>= 10000 bp)     54
# contigs (>= 25000 bp)     38
# contigs (>= 50000 bp)     21
Total length (>= 0 bp)      3390558
less report.txt


higher QA/QC
longer contigs.(3.2MB-total lengths. we want 3.2MB contigs)
fewer contigs ( 50 is ok, but thousand is not good!)
the number of contigs( like if that creature has two chromosomes, we want 2 contigs.
we want higher N50 to have the longer contigs.
L50

3.15Mb<3.2Mb (hard time to assembly repeated sequences,...) 3.2(ideally)
